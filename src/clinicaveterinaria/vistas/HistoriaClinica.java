/*
 * CONECTAR LA LISTA DE TRATAMIENTOS POR ID DE MASCOTA
 * CONECTAR BOX DE LISTA DE TODOS LOS TRATAMIENTOS  
 * FECHA DE VISITA
 * TABLA EDITABLE, MUESTRA TODOS LOS TRATAMIENTOS Y SE PUEDE EDITAR SUS DATOS
 *
 */
package clinicaveterinaria.vistas;

import accesoDatos.MascotaData;
import accesoDatos.TratamientoData;
import clinicaveterinaria.entidades.Mascota;
import clinicaveterinaria.entidades.Tratamiento;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author borch
 */
public class HistoriaClinica extends javax.swing.JDialog {
    
    private MascotaData mascotaData;
    private TratamientoData tratamientoData;
    private Mascota mascotaSeleccionada;

    /**
     * Creates new form HistoriaClinica
     * @param parent
     * @param modal
     * @param mascota
     */
    public HistoriaClinica(java.awt.Frame parent, boolean modal,Mascota mascota) {
        super(parent, modal);
        initComponents();
        
        mascotaData = new MascotaData(); // Inicializa el acceso a datos de Mascota
        tratamientoData = new TratamientoData(); // Inicializa el acceso a datos de Tratamiento
        this.mascotaSeleccionada = mascota;

        cargarTratamientosEnComboBox();
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boxTratamiento = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        fieldPesoActual = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dateVisitaNueva = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSintomas = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTratamiento = new javax.swing.JTable();
        buttonGuardar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel1.setText("Historia clinica");

        jLabel3.setText("Tratamiento:");

        boxTratamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxTratamientoActionPerformed(evt);
            }
        });

        jLabel4.setText("Peso:");

        fieldPesoActual.setText("jTextField1");

        jLabel5.setText("Fecha de consulta:");

        jLabel6.setText("Detalles de consulta:");

        jScrollPane1.setViewportView(txtSintomas);

        jLabel7.setFont(new java.awt.Font("Segoe UI Symbol", 1, 11)); // NOI18N
        jLabel7.setText("Tratamientos del paciente: ");

        tableTratamiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "FECHA", "TRATAMIENTO", "DETALLES", "INICIO", "TERMINO", "IMPORTE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableTratamiento);
        if (tableTratamiento.getColumnModel().getColumnCount() > 0) {
            tableTratamiento.getColumnModel().getColumn(0).setResizable(false);
            tableTratamiento.getColumnModel().getColumn(1).setResizable(false);
            tableTratamiento.getColumnModel().getColumn(2).setResizable(false);
            tableTratamiento.getColumnModel().getColumn(3).setResizable(false);
            tableTratamiento.getColumnModel().getColumn(4).setResizable(false);
        }

        buttonGuardar.setText("Guardar");
        buttonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGuardarActionPerformed(evt);
            }
        });

        buttonCancelar.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(boxTratamiento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fieldPesoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateVisitaNueva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonCancelar)
                .addGap(86, 86, 86)
                .addComponent(buttonGuardar)
                .addGap(220, 220, 220))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldPesoActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateVisitaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonGuardar)
                    .addComponent(buttonCancelar))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGuardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonGuardarActionPerformed

    private void boxTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxTratamientoActionPerformed
        // Obtenemos el tratamiento seleccionado del JComboBox
            String tratamientoSeleccionado = (String) boxTratamiento.getSelectedItem();

            // Aquí agregamos el tratamiento seleccionado a la tabla editable
            // Primero, obtén el modelo de la tabla
            DefaultTableModel model = (DefaultTableModel) tableTratamiento.getModel();

            // Luego, agrega una nueva fila con el tratamiento seleccionado y detalles editables
            model.addRow(new Object[]{tratamientoSeleccionado, "", "", "", "", ""});
        
    
    }//GEN-LAST:event_boxTratamientoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistoriaClinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HistoriaClinica dialog = new HistoriaClinica(new javax.swing.JFrame(), true, null);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxTratamiento;
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonGuardar;
    private com.toedter.calendar.JDateChooser dateVisitaNueva;
    private javax.swing.JTextField fieldPesoActual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableTratamiento;
    private javax.swing.JTextPane txtSintomas;
    // End of variables declaration//GEN-END:variables

    private void cargarTratamientosEnComboBox() {
        List<Tratamiento> tratamientos = tratamientoData.obtenerTodosLosTratamientos();

        // Limpiamos el JComboBox
        boxTratamiento.removeAllItems();

        // Agregamos los nombres de los tratamientos al JComboBox
        for (Tratamiento tratamiento : tratamientos) {
            boxTratamiento.addItem(tratamiento.getTipo());
        }
    }
    
    private void cargarTratamientosDeMascota(int idMascota) {
        DefaultTableModel tratamientoTableModel = mascotaData.obtenerTratamientosDeMascota(idMascota);
        tableTratamiento.setModel(tratamientoTableModel);
    }

    public Mascota getMascotaSeleccionada() {
        return mascotaSeleccionada;
    }

    // Agregar un método set para establecer la mascota seleccionada
    public void setMascotaSeleccionada(Mascota mascotaSeleccionada) {
        this.mascotaSeleccionada = mascotaSeleccionada;
    }
}
